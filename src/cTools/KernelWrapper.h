/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class cTools_KernelWrapper */

#ifndef _Included_cTools_KernelWrapper
#define _Included_cTools_KernelWrapper
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     cTools_KernelWrapper
 * Method:    exit
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_cTools_KernelWrapper_exit
  (JNIEnv *, jclass, jint);

/*
 * Class:     cTools_KernelWrapper
 * Method:    fork
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_cTools_KernelWrapper_fork
  (JNIEnv *, jclass);

/*
 * Class:     cTools_KernelWrapper
 * Method:    waitpid
 * Signature: (I[II)I
 */
JNIEXPORT jint JNICALL Java_cTools_KernelWrapper_waitpid
  (JNIEnv *, jclass, jint, jintArray, jint);

/*
 * Class:     cTools_KernelWrapper
 * Method:    execv
 * Signature: (Ljava/lang/String;[Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_cTools_KernelWrapper_execv
  (JNIEnv *, jclass, jstring, jobjectArray);

/*
 * Class:     cTools_KernelWrapper
 * Method:    get_current_dir_name
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_cTools_KernelWrapper_get_1current_1dir_1name
  (JNIEnv *, jclass);

/*
 * Class:     cTools_KernelWrapper
 * Method:    open
 * Signature: (Ljava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_cTools_KernelWrapper_open
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     cTools_KernelWrapper
 * Method:    close
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_cTools_KernelWrapper_close
  (JNIEnv *, jclass, jint);

/*
 * Class:     cTools_KernelWrapper
 * Method:    lseek
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_cTools_KernelWrapper_lseek
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     cTools_KernelWrapper
 * Method:    read
 * Signature: (I[BI)I
 */
JNIEXPORT jint JNICALL Java_cTools_KernelWrapper_read
  (JNIEnv *, jclass, jint, jbyteArray, jint);

/*
 * Class:     cTools_KernelWrapper
 * Method:    readOffset
 * Signature: (I[BII)I
 */
JNIEXPORT jint JNICALL Java_cTools_KernelWrapper_readOffset
  (JNIEnv *, jclass, jint, jbyteArray, jint, jint);

/*
 * Class:     cTools_KernelWrapper
 * Method:    write
 * Signature: (I[BI)I
 */
JNIEXPORT jint JNICALL Java_cTools_KernelWrapper_write
  (JNIEnv *, jclass, jint, jbyteArray, jint);

/*
 * Class:     cTools_KernelWrapper
 * Method:    writeOffset
 * Signature: (I[BII)I
 */
JNIEXPORT jint JNICALL Java_cTools_KernelWrapper_writeOffset
  (JNIEnv *, jclass, jint, jbyteArray, jint, jint);

/*
 * Class:     cTools_KernelWrapper
 * Method:    pipe
 * Signature: ([I)I
 */
JNIEXPORT jint JNICALL Java_cTools_KernelWrapper_pipe
  (JNIEnv *, jclass, jintArray);

/*
 * Class:     cTools_KernelWrapper
 * Method:    readdir
 * Signature: (Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_cTools_KernelWrapper_readdir
  (JNIEnv *, jclass, jstring);

/*
 * Class:     cTools_KernelWrapper
 * Method:    dup2
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_cTools_KernelWrapper_dup2
  (JNIEnv *, jclass, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
